@model FifthTask.Models.ManagerModel

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Enter manager info</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.ManagerName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ManagerSername, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ManagerSername, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ManagerSername, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add manager" class="btn btn-default" onclick="CheckManagerInfo()"/>
            </div>
        </div>
    </div>
}

<script>
    function CheckManagerInfo() {
        var name = document.getElementById('ManagerName');
        var sername = document.getElementById('ManagerSername');

        if (name.value.length < 2 || name.value.length > 20) {
            name.value = null;
            alert("Enter the correct name.");
            return;
        }
        if (sername.value.length < 2 || sername.value.length > 30) {
            sername.value = null;
            alert("Enter the correct sername.")
            return;
        }
            alert("Manager " + name.value + " " + sername.value + " successfully added.");
            return;
        
    }
</script>

